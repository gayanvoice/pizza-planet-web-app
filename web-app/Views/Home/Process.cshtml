@using Microsoft.AspNetCore.Identity
@using System.Globalization;
@using web_app.Helper;
@using web_app.Models.Procedure;
@using web_app.Models.Repository;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model web_app.Models.View.HomeViewModel.ProcessViewModel

@{
    if (Model is not null && Model.AppCheckout is not null)
    {
        ViewData["Title"] = "Process - " + Model.AppCheckout.CheckoutId;
    }
    else
    {
        ViewData["Title"] = "Process - #Error: CheckoutId is NULL";
    }
}
@section CSS{
    <link href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="https://fonts.cdnfonts.com/css/blank-space" rel="stylesheet" to html>
}
<style>

    html * {
        color: white !important;
    }

    small {
        color: white !important;

    }
    body{
        /*!!IMPORTANT forces grid display which stops headers & footers moving around*/
        min-height: 100vh;
        display: grid;
        grid-template-rows: 1fr auto;
        background: rgb(56,59,83) !important;
        background: radial-gradient(circle, rgba(56,59,83,1) 0%, rgba(0,0,0,1) 100%) !important;
        
    }
</style>
<div class="stars"></div>
@if (SignInManager.IsSignedIn(User))
{
    @if (Model.AspNetUser is not null && Model.AspNetUser.Id is not null)
    {
        <partial name="/Views/Shared/_AuthNavPartial.cshtml" />
        @if (Model.AppCheckout is not null)
        {
            <main class="container">
                <div class="d-flex align-items-center p-3 my-3 bannerwide rounded">
                    <div class="lh-1">
                        <div class="h6 mb-0 lh-1">Checkout ID <span class="text-muted" style"color: white !important;">@Model.AppCheckout.CheckoutId</span></div>
                        <small>Last updated @Time.ToRelativeDate(Model.AppCheckout.ModifyTime)</small>
                    </div>
                </div>
                @if (Model.AppCheckout.DeliveryMethod is not null && Model.AppCheckout.DeliveryMethod.Equals("DELIVERY"))
                {
                    if (Model.AppAddress is not null)
                    {
                        <div class="d-flex align-items-center p-3 my-3 bannerwide rounded">
                            <div class="lh-1">
                                <div class="h6 mb-0 lh-1">Delivery Type <span class="text-muted" style"color: white !important;">@Model.AppCheckout.DeliveryMethod</span></div>
                                <div class="h6 mb-0 lh-1">Address
                                    <span class="text-muted" style"color: white !important;">@Model.AppAddress.HouseNumber</span>
                                    <span class="text-muted" style"color: white !important;">@Model.AppAddress.Street</span>
                                    <span class="text-muted" style"color: white !important;">@Model.AppAddress.Region</span>
                                    <span class="text-muted" style"color: white !important;">@Model.AppAddress.Country</span>
                                    <span class="text-muted" style"color: white !important;">@Model.AppAddress.PostCode</span>
                                </div>
                            </div>
                        </div>
                    }
                   
                }
                else
                {
                    <div class="d-flex align-items-center p-3 my-3 bannerwide rounded">
                        <div class="lh-1">
                            <div class="h6 mb-0 lh-1">Delivery Type <span class="text-muted" style"color: white !important;">@Model.AppCheckout.DeliveryMethod</span></div>
                        </div>
                    </div>
                    
                }

                @if (Model.AppDelivery is not null)
                {
                    <div class="d-flex align-items-center p-3 my-3 rounded bannerwide">
                        <div class="lh-1">
                            @if (Model.AppDelivery.AuthUserId is not null)
                            {
                                <div class="h6 mb-0 lh-1">Driver Id <span class="text-muted" style"color: white !important;">@Model.AppDelivery.AuthUserId</span></div>
                            }
                            @if (Model.AppDelivery.Latitude is not null && Model.AppDelivery.Longitude is not null)
                            {
                                <div class="h6 mb-0 lh-1">Location <span class="text-muted" style"color: white !important;">@Model.AppDelivery.Latitude</span> <span class="text-muted">@Model.AppDelivery.Longitude</span></div>
                            }
                            @if (Model.AppDelivery.Status is not null)
                            {
                                <div class="h6 mb-0 lh-1">Status <span class="text-muted" style"color: white !important;">@Model.AppDelivery.Status</span></div>
                            }
                        </div>
                    </div>
                  @*  <div class="d-flex align-items-center p-3 my-3 rounded border">
                        <div id="osm-map" class="mt-2 rounded-2"></div>
                    </div>*@
                }
               
                @if (Model.CheckoutBasketProcedureModelV4Enumerable is not null)
                {
                    var totalProgress = 0;
                    var totalItems = Model.CheckoutBasketProcedureModelV4Enumerable.Count();
                  
                    <div class="my-3 p-3 bg-body rounded bannerwide">
                        <h6 class="border-bottom pb-2 mb-0">Items</h6>
                        @foreach (CheckoutBasketProcedureModel.V4? v4 in Model.CheckoutBasketProcedureModelV4Enumerable)
                        {
                            if (v4 is not null)
                            {
                                var itemProgress = 100;
                                if (Model.AppCheckout.Status.Equals("COMPLETE"))
                                {
                                    itemProgress = 100;
                                }
                                else
                                {
                                    if (v4.Status is not null)
                                    {
                                        if (v4.Status.Equals("PROCESS"))
                                        {
                                            itemProgress = 25;
                                        }
                                        else if (v4.Status.Equals("MAKE"))
                                        {
                                            itemProgress = 50;
                                        }
                                        else if (v4.Status.Equals("PACK"))
                                        {
                                            itemProgress = 75;
                                        }
                                        else if (v4.Status.Equals("OK"))
                                        {
                                            itemProgress = 100;
                                        }
                                        else
                                        {
                                            itemProgress = 0;
                                        }
                                    }
                                }
                                totalProgress = totalProgress + itemProgress;

                                totalItems = totalItems * v4.Quantity;
                                <div class="d-flex text-muted pt-3" style"color: white !important;">
                                    <div class="pb-3 mb-0 small lh-sm border-bottom w-100">
                                        <div class="d-flex justify-content-between">
                                            <strong class="text-gray-dark">@v4.Quantity X @v4.Name</strong>
                                            <div class="progress" role="progressbar" aria-label="Basic example" style="width: 200px">
                                                <div class="progress-bar" style="width: @itemProgress%">@itemProgress %</div>
                                            </div>
                                        </div>
                                        <span class="d-block">@v4.Status</span>
                                    </div>
                                </div>
                            }
                        }
                        @{
                            totalProgress = totalProgress / totalItems;
                         }
                    </div>
                    <div class="p-3 my-3 rounded bannerwide">
                        <div class="lh-1">
                            <h1 class="h6 mb-0 lh-1 mb-3">Checkout Status <span class="text-muted" style"color: white !important;">@Model.AppCheckout.Status</span></h1>
                            <div class="progress" role="progressbar" aria-label="Basic example">
                                <div class="progress-bar" style="width: @totalProgress%">@totalProgress%</div>
                            </div>

                        </div>
                    </div>
                }
            </main>
        }
        <partial name="/Views/Shared/_AuthFooterPartial.cshtml" />
    }
    else
    {
        <div class="alert alert-danger" role="alert">
            User is already signed in. But no User ID. Contact Admin.
        </div>
    }
}
@section JS{
    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"></script>
    <script>
        const element = document.getElementById('osm-map');
        element.style = 'height:400px';
        const map = L.map(element);
        L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);
        var target = L.latLng(52.926413, -1.486821);

        map.setView(target, 18);
        setInterval(function () {
            map.invalidateSize();
        }, 100);

        L.marker(target).addTo(map);
    </script>
}