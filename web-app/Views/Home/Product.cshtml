@using Microsoft.AspNetCore.Identity
@using System.Globalization;
@using web_app.Models.Procedure;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model web_app.Models.View.HomeViewModel.ProductViewModel
@{
    ViewData["Title"] = "Type";
}
@if (SignInManager.IsSignedIn(User))
{
    @if (Model.AspNetUser is not null && Model.AspNetUser.Id is not null)
    {
        <partial name="/Views/Shared/_AuthNavPartial.cshtml" />
        <div class="container">
            <main>
                <div class="container px-4 py-5" id="custom-cards">
                    <h2 class="pb-2 border-bottom">Products</h2>

                    <div class="row row-cols-1 row-cols-lg-2 align-items-stretch g-4 py-5">
                        @if (Model.ProductProcedureModelV3Enumerable is not null)
                        {
                            var list = Model.ProductProcedureModelV3Enumerable
                            .GroupBy(i => new { i.ProductId, i.Name, i.Description, i.Size, i.Kcal, i.Price, i.Type, i.ProductImageUrl });
                            foreach (var item in list)
                            {
                                var groupKey = item.Key;
                                <a data-bs-toggle="modal" data-bs-target="#exampleModal" data-bs-product-name="@groupKey.Name"
                                data-bs-product-price="@groupKey.Price.ToString("C3", CultureInfo.CreateSpecificCulture("en-GB"))"
                                class="col text-decoration-none open-AddBookDialog">
                                    <div class="card card-cover h-100 overflow-hidden text-bg-dark rounded-4 shadow-lg"
                                         style="background-image: url('@groupKey.ProductImageUrl'); background-size: cover">
                                        @if (Model.CheckoutBasketProcedureModelV2Enumerable is not null)
                                        {
                                            @foreach (CheckoutBasketProcedureModel.V2? v2 in Model.CheckoutBasketProcedureModelV2Enumerable
                                           .Where(c => c.ProductId == groupKey.ProductId).ToList())
                                            {
                                                if (v2 is not null)
                                                {
                                                    <span type="button"
                                                          class="position-absolute top-0 end-0 p-3 m-3 h1 text-light bg-opacity-10">@v2.Quantity</span>
                                                }
                                            }
                                        }
                                      
                                        <div class="d-flex flex-column h-100 p-5 pb-3 text-shadow-1">
                                            <h4 class="mt-5 mb-4 display-6 lh-1 fw-bold text-light">@groupKey.Name</h4>
                                            @foreach (var groupedItem in item)
                                            {
                                                if (groupedItem is not null)
                                                {
                                                    <div class="text-light"><span>@groupedItem.ContentName</span> <span class="">@groupedItem.RecipeQuantity @groupedItem.RecipeMeasurement</span></div>
                                                }
                                            }
                                            <div class="mt-4">
                                                <ul class="d-flex list-unstyled mt-auto">
                                                    <li class="ms-1">
                                                        @if (Model.ProductContentProcedureModelV1Enumerable is not null)
                                                        {
                                                            @foreach (ProductContentProcedureModel.V1? v1 in Model.ProductContentProcedureModelV1Enumerable
                                                           .Where(p => p.ProductId == groupKey.ProductId).ToList())
                                                            {
                                                                if (v1 is not null && v1.GuideName is not "")
                                                                {
                                                                    <img src="@v1.GuideImageUrl" alt="@v1.GuideName" width="32" height="32"
                                                                         class="rounded-circle border border-white bg-light">
                                                                }
                                                            }
                                                        }
                                                    </li>
                                                    <li class="ms-1">
                                                        @if (Model.ProductAllergyProcedureModelV2Enumerable is not null)
                                                        {
                                                            @foreach (ProductAllergyProcedureModel.V2? v2 in Model.ProductAllergyProcedureModelV2Enumerable
                                                           .Where(p => p.ProductId == groupKey.ProductId).ToList())
                                                            {
                                                                if (v2 is not null && v2.AllergyName is not "")
                                                                {
                                                                    <img src="@v2.AllergyImageUrl" alt="@v2.AllergyName" width="32" height="32"
                                                                         class="rounded-circle border border-white bg-light">
                                                                }
                                                            }
                                                        }
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            }
                        }
                    </div>
                </div>





            </main>
        </div>
        <partial name="/Views/Shared/_AuthFooterPartial.cshtml" />
    }
    else
    {
        <div class="alert alert-danger" role="alert">
            User is already signed in. But no User ID. Contact Admin.
        </div>
    }
}

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" enctype="multipart/form-data" asp-controller="Home" asp-action="Product">
                    <input type="text" id="ProductId" name="FirstName" hidden />
                    <div class="mb-3 text-center">
                        <span class="modal-product-price display-6" id="exampleModalLabel">Price</span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <a input type="submit" class="btn btn-primary">Add</a>
            </div>
        </div>
    </div>
</div>

@section JS{
    <script>
        const exampleModal = document.getElementById('exampleModal')
        if (exampleModal) {
            exampleModal.addEventListener('show.bs.modal', event => {
                const button = event.relatedTarget
                const productTitle = button.getAttribute('data-bs-product-name')
                const productPrice = button.getAttribute('data-bs-product-price')

                const modalTitle = exampleModal.querySelector('.modal-title')
                const modalProductPrice = exampleModal.querySelector('.modal-product-price')

                modalTitle.textContent = `Would you like to add ${productTitle}?`
                modalProductPrice.textContent = productPrice
            })
        }
    </script>
   
}