@using Microsoft.AspNetCore.Identity
@using web_app.Models.Repository;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model web_app.Models.View.HomeViewModel.AccountViewModel
@{
    ViewData["Title"] = "Profile";
}
@section CSS{
    <link href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/LKStyle.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="https://fonts.cdnfonts.com/css/blank-space" rel="stylesheet" to html>
    <style>

    body{
            background: rgb(56,59,83) !important;
            background: radial-gradient(circle, rgba(56,59,83,1) 0%, rgba(0,0,0,1) 100%) !important;
            /*!!IMPORTANT forces grid display which stops headers & footers moving around*/
            min-height: 100vh;
            display: grid;
            grid-template-rows: 1fr auto;


    
}
    </style>

}
@*<div class="containerwidenopad">*@
    <div class="stars"></div>
@if (SignInManager.IsSignedIn(User))
{
    @if (Model.AspNetUser is not null && Model.AspNetUser.Id is not null)
    {
        <partial name="/Views/Shared/_AuthNavPartial.cshtml" />
        <main class="container">
            @if (Model.AspNetUserLogin is not null)
            {
                if(Model.AspNetUserLogin.LoginProvider is not null)
                {
                 @*MS LOGGED IN*@
                    if(Model.AspNetUserLogin.LoginProvider.Equals("Microsoft")){
                        <div class="bannerwide d-flex align-items-center p-3 my-3 text-black rounded shadow-sm">
                            <img class="me-3" src="https://upload.wikimedia.org/wikipedia/commons/2/25/Microsoft_icon.svg" alt="" height="38">
                            <div class="lh-1">
                                <h1 class="h6 mb-0 text-black lh-1">Microsoft</h1>
                                @if(Model.AspNetUser.Email is not null)
                                {
                                     <small>@Model.AspNetUser.Email</small>
                                }
                               
                            </div>
                        </div>

                    }

                   @*GOOGLE LOGGED IN*@
                    else if (Model.AspNetUserLogin.LoginProvider.Equals("Google"))
                    {
                        <div class="bannerwide d-flex align-items-center p-3 my-3 rounded shadow-sm">
                            <img class="me-3" src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/1024px-Google_%22G%22_Logo.svg.png" alt="" height="38">
                            <div class="lh-1">
                                <h1 class="h6 mb-0 lh-1">Google</h1>
                                @if (Model.AspNetUser.Email is not null)
                                {
                                    <small>@Model.AspNetUser.Email</small>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                       @* EMAIL LOGIN*@
                        <div class="bannerwide d-flex align-items-center p-3 my-3 rounded shadow-sm">
                            <img class="me-3" src="https://cdn-icons-png.flaticon.com/512/893/893257.png" alt="" height="38">
                            <div class="lh-1">
                                <h1 class="h6 mb-0 lh-1">Unrecognized Provider</h1>
                                @if (Model.AspNetUser.Email is not null)
                                {
                                    <small>@Model.AspNetUser.Email</small>
                                }
                            </div>
                        </div>
                    }

                }
            }
            else
            {
                <div class="bannerwide d-flex align-items-center p-3 my-3 rounded shadow-sm">
                    <img class="me-3" src="https://cdn-icons-png.flaticon.com/512/893/893257.png" alt="" height="38">
                    <div class="lh-1">
                        <h1 class="h6 mb-0 lh-1">Custom Email</h1>
                        @if (Model.AspNetUser.Email is not null)
                        {
                            <small>@Model.AspNetUser.Email</small>
                        }
                    </div>
                </div>
            }
           

            <div class="bannerwide px-3 rounded shadow-sm">
                @if (Model.AspNetUser.Id is not null) {
                    <div class="d-flex text-body-secondary pt-3">
                            <div class="whiteborderbtm pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                    <strong class="whitebold">User Id</strong>
                            </div>
                                <span class="d-block white">@Model.AspNetUser.Id</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.UserName is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="whiteborderbtm pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                    <strong class="whitebold">UserName</strong>
                            </div>
                                <span class="d-block white">@Model.AspNetUser.UserName</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.NormalizedUserName is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="whiteborderbtm pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                    <strong class="whitebold">Normalized UserName</strong>
                            </div>
                                <span class="d-block white">@Model.AspNetUser.NormalizedUserName</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.Email is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                         <div class="whiteborderbtm pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                    <strong class="whitebold">Email</strong>
                            </div>
                                <span class="d-block white">@Model.AspNetUser.Email</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.NormalizedEmail is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="whiteborderbtm pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                    <strong class="whitebold">Normalized Email</strong>
                            </div>
                                <span class="d-block white">@Model.AspNetUser.NormalizedEmail</span>
                        </div>
                    </div>
                }
                <div class="d-flex text-body-secondary pt-3">
                     <div class="whiteborderbtm pb-3 mb-0 small lh-sm w-100">
                        <div class="d-flex justify-content-between">
                                <strong class="whitebold">Email Confirmed</strong>
                        </div>
                            <span class="d-block white">@Model.AspNetUser.EmailConfirmed</span>
                    </div>
                </div>
                @if (Model.AspNetUser.PasswordHash is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="whiteborderbtm pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                    <strong class="whitebold">Password Hash</strong>
                            </div>
                                <span class="d-block white">@Model.AspNetUser.PasswordHash</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.SecurityStamp is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="whiteborderbtm pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                    <strong class="whitebold">Security Stamp</strong>
                            </div>
                                <span class="d-block white">@Model.AspNetUser.SecurityStamp</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.ConcurrencyStamp is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                    <strong class="whitebold">Concurrency Stamp</strong>
                            </div>
                                <span class="d-block white">@Model.AspNetUser.ConcurrencyStamp</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.PhoneNumber is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="whiteborderbtm pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                    <strong class="whitebold">Phone Number</strong>
                            </div>
                                <span class="d-block white">@Model.AspNetUser.PhoneNumber</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.PhoneNumber is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="whiteborderbtm pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                    <strong class="whitebold">Phone Number Confirmed</strong>
                            </div>
                                <span class="d-block white">@Model.AspNetUser.PhoneNumberConfirmed</span>
                        </div>
                    </div>
                }
            </div>
            <div class="bannerwide my-3 p-3 bg-body rounded shadow-sm">
                <h6 class="whiteborderbtm border-bottom pb-2 mb-0">Addresses</h6>
                @if (Model.AddressEnumerable is not null)
                {
                    foreach (AppAddress? appAddress in Model.AddressEnumerable)
                    {
                        if (appAddress is not null)
                        {
                            <div class="whiteborderbtm d-flex text-body-secondary pt-3">
                                <img data-bs-toggle="modal" data-bs-target="#deleteModal" data-bs-address-id="@appAddress.AddressId" data-bs-post-code="@appAddress.PostCode"
                                     src="https://cdn-icons-png.flaticon.com/512/1214/1214428.png" class="imgwhite bd-placeholder-img flex-shrink-0 me-2 rounded" width="32" height="32"
                                     style="cursor: pointer;" />
                                <div class=" pb-3 mb-0 small lh-sm w-100 open-AddBookDialog"
                                     data-bs-toggle="modal" data-bs-target="#exampleModal"
                                     data-bs-post-code="@appAddress.PostCode"
                                     data-bs-latitude="@appAddress.Latitude"
                                     data-bs-longitude="@appAddress.Longitude" style="cursor: pointer;">
                                    <div class="d-flex justify-content-between">
                                            <strong class="whitebold">@appAddress.PostCode</strong>
                                            <span class="white">@appAddress.Latitude ° N, @appAddress.Longitude ° W</span>
                                    </div>
                                        <span class="d-block white">@appAddress.HouseNumber @appAddress.Street @appAddress.Region @appAddress.Country</span>
                                </div>
                            </div>
                        }
                    }

                }


                    <small class="d-block white text-end mt-3">
                    <a class="smallrdbtn barelink" asp-controller="Home" asp-action="Address">New address</a>
                </small>
            </div>
        </main>
        <partial name="/Views/Shared/_AuthFooterPartial.cshtml" />
    }
    else
    {
        <div class="alert alert-danger" role="alert">
            User is already signed in. But no User ID. Contact Admin.
        </div>
    }
}


<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form asp-controller="Home" asp-action="DeleteAddress" method="get">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="deleteModalLabel">Title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="h6">Are you sure want to delete this postcode from account?</div>
                <input type="text" class="form-control" name="Id" hidden>
            </div>
            <div class="modal-footer">
                    <button class="btn btn-danger" data-bs-target="#exampleModalToggle2" data-bs-toggle="modal" type="submit">Delete</button>
            </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="osm-map"></div>
            </div>
        </div>
    </div>
</div>
@section JS{
    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"></script>
    <script>
        const element = document.getElementById('osm-map');
        element.style = 'height:600px';
        const map = L.map(element);
        const exampleModal = document.getElementById('exampleModal')
        if (exampleModal) {
            exampleModal.addEventListener('show.bs.modal', event => {
                const button = event.relatedTarget

                const postCode = button.getAttribute('data-bs-post-code')
                const latitude = button.getAttribute('data-bs-latitude')
                const longitude = button.getAttribute('data-bs-longitude')

                const modalTitle = exampleModal.querySelector('.modal-title')

                L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);
                var target = L.latLng(latitude, longitude);

                map.setView(target, 18);
                setInterval(function () {
                    map.invalidateSize();
                }, 100);

                L.marker(target).addTo(map);

                modalTitle.textContent = postCode.concat(' ', latitude, ' ', longitude)
            })
        }
    </script>
    <script>
        const deleteModal = document.getElementById('deleteModal')
        if (deleteModal) {
            deleteModal.addEventListener('show.bs.modal', event => {
                const button = event.relatedTarget

                const addressId = button.getAttribute('data-bs-address-id')
                const postCode = button.getAttribute('data-bs-post-code')

                const modalTitle = deleteModal.querySelector('.modal-title')
                const modalBodyInput = deleteModal.querySelector('.modal-body input')

                modalTitle.textContent = 'Delete '.concat(postCode)
                modalBodyInput.value = addressId
            })
        }
    </script>
}

@* </div>*@