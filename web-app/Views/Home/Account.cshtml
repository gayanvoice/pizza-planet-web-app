@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model web_app.Models.View.HomeViewModel.AccountViewModel
@{
    ViewData["Title"] = "Profile";
}
@section CSS{
    <link href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css" rel="stylesheet" />
}
@if (SignInManager.IsSignedIn(User))
{
    @if (Model.AspNetUser is not null && Model.AspNetUser.Id is not null)
    {
        <partial name="/Views/Shared/_AuthNavPartial.cshtml" />
        <main class="container">
            @if (Model.AspNetUserLogin is not null)
            {
                if(Model.AspNetUserLogin.LoginProvider is not null)
                {
                    if(Model.AspNetUserLogin.LoginProvider.Equals("Microsoft")){
                        <div class="d-flex align-items-center p-3 my-3 text-black rounded shadow-sm">
                            <img class="me-3" src="https://upload.wikimedia.org/wikipedia/commons/2/25/Microsoft_icon.svg" alt="" height="38">
                            <div class="lh-1">
                                <h1 class="h6 mb-0 text-black lh-1">Microsoft</h1>
                                @if(Model.AspNetUser.Email is not null)
                                {
                                     <small>@Model.AspNetUser.Email</small>
                                }
                               
                            </div>
                        </div>
                    }
                    else if (Model.AspNetUserLogin.LoginProvider.Equals("Google"))
                    {
                        <div class="d-flex align-items-center p-3 my-3 rounded shadow-sm">
                            <img class="me-3" src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/1024px-Google_%22G%22_Logo.svg.png" alt="" height="38">
                            <div class="lh-1">
                                <h1 class="h6 mb-0 lh-1">Google</h1>
                                @if (Model.AspNetUser.Email is not null)
                                {
                                    <small>@Model.AspNetUser.Email</small>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="d-flex align-items-center p-3 my-3 rounded shadow-sm">
                            <img class="me-3" src="https://cdn-icons-png.flaticon.com/512/893/893257.png" alt="" height="38">
                            <div class="lh-1">
                                <h1 class="h6 mb-0 lh-1">Unrecognized Provider</h1>
                                @if (Model.AspNetUser.Email is not null)
                                {
                                    <small>@Model.AspNetUser.Email</small>
                                }
                            </div>
                        </div>
                    }

                }
            }
            else
            {
                <div class="d-flex align-items-center p-3 my-3 rounded shadow-sm">
                    <img class="me-3" src="https://cdn-icons-png.flaticon.com/512/893/893257.png" alt="" height="38">
                    <div class="lh-1">
                        <h1 class="h6 mb-0 lh-1">Custom Email</h1>
                        @if (Model.AspNetUser.Email is not null)
                        {
                            <small>@Model.AspNetUser.Email</small>
                        }
                    </div>
                </div>
            }
           

            <div class="px-3 rounded shadow-sm">
                @if (Model.AspNetUser.Id is not null) {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                <strong class="text-gray-dark">Id</strong>
                            </div>
                                <span class="d-block">@Model.AspNetUser.Id</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.UserName is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                <strong class="text-gray-dark">UserName</strong>
                            </div>
                            <span class="d-block">@Model.AspNetUser.UserName</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.NormalizedUserName is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                <strong class="text-gray-dark">Normalized UserName</strong>
                            </div>
                            <span class="d-block">@Model.AspNetUser.NormalizedUserName</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.Email is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                         <div class="pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                <strong class="text-gray-dark">Email</strong>
                            </div>
                            <span class="d-block">@Model.AspNetUser.Email</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.NormalizedEmail is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                <strong class="text-gray-dark">Normalized Email</strong>
                            </div>
                            <span class="d-block">@Model.AspNetUser.NormalizedEmail</span>
                        </div>
                    </div>
                }
                <div class="d-flex text-body-secondary pt-3">
                     <div class="pb-3 mb-0 small lh-sm w-100">
                        <div class="d-flex justify-content-between">
                            <strong class="text-gray-dark">Email Confirmed</strong>
                        </div>
                        <span class="d-block">@Model.AspNetUser.EmailConfirmed</span>
                    </div>
                </div>
                @if (Model.AspNetUser.PasswordHash is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                <strong class="text-gray-dark">Password Hash</strong>
                            </div>
                            <span class="d-block">@Model.AspNetUser.PasswordHash</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.SecurityStamp is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                <strong class="text-gray-dark">Security Stamp</strong>
                            </div>
                            <span class="d-block">@Model.AspNetUser.SecurityStamp</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.ConcurrencyStamp is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                <strong class="text-gray-dark">Concurrency Stamp</strong>
                            </div>
                            <span class="d-block">@Model.AspNetUser.ConcurrencyStamp</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.PhoneNumber is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                <strong class="text-gray-dark">Phone Number</strong>
                            </div>
                            <span class="d-block">@Model.AspNetUser.PhoneNumber</span>
                        </div>
                    </div>
                }
                @if (Model.AspNetUser.PhoneNumber is not null)
                {
                    <div class="d-flex text-body-secondary pt-3">
                        <div class="pb-3 mb-0 small lh-sm w-100">
                            <div class="d-flex justify-content-between">
                                <strong class="text-gray-dark">Phone Number Confirmed</strong>
                            </div>
                            <span class="d-block">@Model.AspNetUser.PhoneNumberConfirmed</span>
                        </div>
                    </div>
                }
            </div>

            <div class="mt-3 px-3 rounded shadow-sm">
                <div class="d-flex text-body-secondary pt-3">
                    <div class="pb-3 mb-0 small lh-sm w-100">
                        <div class="d-flex justify-content-between">
                            <strong class="text-gray-dark">Addresses</strong>
                        </div>
                    </div>
                </div>
                <div class="d-flex text-body-secondary pt-3">
                    <div class="pb-3 mb-0 small lh-sm w-100">
                        <div class="d-flex justify-content-between">
                            <strong class="text-gray-dark">Open Maps</strong>
                        </div>
                        <a data-bs-toggle="modal" data-bs-target="#exampleModal" data-bs-post-code="DE1 3LD" data-bs-latitude="52.926413" data-bs-longitude="-1.486821"
                           class="col text-decoration-none open-AddBookDialog">52.926413/-1.486821</a>
                    
                      
                    </div>
                </div>
            </div>


        </main>
        <partial name="/Views/Shared/_AuthFooterPartial.cshtml" />
    }
    else
    {
        <div class="alert alert-danger" role="alert">
            User is already signed in. But no User ID. Contact Admin.
        </div>
    }
}



<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="osm-map"></div>
            </div>
        </div>
    </div>
</div>
@section JS{
    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"></script>
    <script>
        const element = document.getElementById('osm-map');
        element.style = 'height:600px';
        const map = L.map(element);
        const exampleModal = document.getElementById('exampleModal')
        if (exampleModal) {
            exampleModal.addEventListener('show.bs.modal', event => {
                const button = event.relatedTarget

                const postCode = button.getAttribute('data-bs-post-code')
                const latitude = button.getAttribute('data-bs-latitude')
                const longitude = button.getAttribute('data-bs-longitude')

                const modalTitle = exampleModal.querySelector('.modal-title')

                L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);
                var target = L.latLng(latitude, longitude);

                map.setView(target, 18);
                setInterval(function () {
                    map.invalidateSize();
                }, 100);

                L.marker(target).addTo(map);

                modalTitle.textContent = postCode.concat(' ', latitude, ' ', longitude)
            })
        }
    </script>
}